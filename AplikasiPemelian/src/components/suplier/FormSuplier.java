package components.suplier;


import io.github.cdimascio.dotenv.Dotenv;
import utils.Koneksi;
import java.io.File;
import javax.swing.JOptionPane;
import java.sql.Statement;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.PreparedStatement;
import java.util.Arrays;
import java.util.HashMap;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.swing.JRViewer;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */

/**
 *
 * @author lumiere
 */
public class FormSuplier extends javax.swing.JDialog {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(FormSuplier.class.getName());
    private DefaultTableModel table;
    Koneksi konek = new Koneksi();
    Connection con = konek.buatKoneksi();
    String kodeLama;
    JasperReport JasReport;
    JasperPrint JasPrint;
    HashMap parameter = new HashMap();
    JasperDesign JasDesign;
    
     // muat .env sekali saja (static block biar nggak panggil berkali-kali)
    private static final Dotenv dotenv = Dotenv.load();

    // bikin variabel URL static final
    private static final String mysqlUrl = String.format(
        "%s%s?user=%s&password=%s",
        dotenv.get("DBURL"),
        dotenv.get("DBNAME"),
        dotenv.get("DBUSER"),
        dotenv.get("DBPASSWORD")
    );
    
    /**
     * Creates new form FormSuplier
     */
    public FormSuplier(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(this);
        String[] data={"KodeSuplier","Nama Suplier","Kontak","Telp","Fax", "Alamat"};
        table = new DefaultTableModel(data,0);
        TabelSuplier.setModel(table);
        tampil();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        InputKodeSuplier = new javax.swing.JTextField();
        InputNamaSuplier = new javax.swing.JTextField();
        InputKontak = new javax.swing.JTextField();
        InputTelp = new javax.swing.JTextField();
        InputFax = new javax.swing.JTextField();
        ButtonSimpan = new javax.swing.JButton();
        ButtonEdit = new javax.swing.JButton();
        ButtonBatal = new javax.swing.JButton();
        ButtonHapus = new javax.swing.JButton();
        ButtonTutup = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TabelSuplier = new javax.swing.JTable();
        ButtonCari = new javax.swing.JButton();
        InputCari = new javax.swing.JTextField();
        ButtonCetak = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        InputAlamat = new javax.swing.JTextArea();
        ButtonRefreshTabel1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel1.setText("INPUT DATA SUPLIER");

        jLabel2.setText("Kode Suplier");

        jLabel3.setText("Nama Suplier");

        jLabel4.setText("Kontak");

        jLabel5.setText("Telp");

        jLabel6.setText("Fax");

        jLabel7.setText("Alamat");

        InputKodeSuplier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InputKodeSuplierActionPerformed(evt);
            }
        });

        ButtonSimpan.setBackground(new java.awt.Color(51, 255, 51));
        ButtonSimpan.setForeground(new java.awt.Color(0, 0, 0));
        ButtonSimpan.setText("Simpan");
        ButtonSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonSimpanActionPerformed(evt);
            }
        });

        ButtonEdit.setBackground(new java.awt.Color(51, 51, 255));
        ButtonEdit.setForeground(new java.awt.Color(0, 0, 0));
        ButtonEdit.setText("Edit");
        ButtonEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonEditActionPerformed(evt);
            }
        });

        ButtonBatal.setText("Batal");
        ButtonBatal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonBatalActionPerformed(evt);
            }
        });

        ButtonHapus.setBackground(new java.awt.Color(255, 51, 51));
        ButtonHapus.setForeground(new java.awt.Color(0, 0, 0));
        ButtonHapus.setText("Hapus");
        ButtonHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonHapusActionPerformed(evt);
            }
        });

        ButtonTutup.setBackground(new java.awt.Color(51, 51, 51));
        ButtonTutup.setForeground(new java.awt.Color(255, 255, 255));
        ButtonTutup.setText("Tutup");
        ButtonTutup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonTutupActionPerformed(evt);
            }
        });

        TabelSuplier.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(TabelSuplier);

        ButtonCari.setText("Cari");
        ButtonCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonCariActionPerformed(evt);
            }
        });

        InputCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InputCariActionPerformed(evt);
            }
        });

        ButtonCetak.setText("Cetak");
        ButtonCetak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonCetakActionPerformed(evt);
            }
        });

        InputAlamat.setColumns(20);
        InputAlamat.setRows(5);
        jScrollPane2.setViewportView(InputAlamat);

        ButtonRefreshTabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/reload.png"))); // NOI18N
        ButtonRefreshTabel1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonRefreshTabel1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(190, 190, 190))
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ButtonRefreshTabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(ButtonCari, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(InputCari)
                            .addGap(18, 18, 18)
                            .addComponent(ButtonCetak, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel5)
                                        .addComponent(jLabel6)
                                        .addComponent(jLabel4)
                                        .addComponent(jLabel3))
                                    .addGap(66, 66, 66))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel7))
                                    .addGap(71, 71, 71)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(InputKodeSuplier)
                                .addComponent(InputNamaSuplier)
                                .addComponent(InputKontak)
                                .addComponent(InputTelp)
                                .addComponent(InputFax, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 412, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(jScrollPane1)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(ButtonSimpan, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(21, 21, 21)
                            .addComponent(ButtonEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(ButtonBatal, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(ButtonHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ButtonTutup, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(InputKodeSuplier, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(InputNamaSuplier, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(InputKontak, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(InputTelp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(InputFax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 27, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ButtonSimpan)
                            .addComponent(ButtonEdit)
                            .addComponent(ButtonTutup)
                            .addComponent(ButtonBatal)
                            .addComponent(ButtonHapus))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ButtonRefreshTabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ButtonCetak)
                            .addComponent(InputCari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ButtonCari))
                        .addGap(13, 13, 13))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void InputKodeSuplierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InputKodeSuplierActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_InputKodeSuplierActionPerformed

    private void ButtonSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonSimpanActionPerformed
        // TODO add your handling code here:
        if (InputKodeSuplier.getText().equals("")){
            JOptionPane.showMessageDialog(null,"Kode Suplier tidak boleh kosong");
            InputKodeSuplier.requestFocus();
        } else if (InputNamaSuplier.getText().equals("")){
            JOptionPane.showMessageDialog(null,"Nama Suplier tidak boleh kosong");
            InputNamaSuplier.requestFocus();
        } else if (InputKontak.getText().equals("")){
            JOptionPane.showMessageDialog(null,"Kontak tidak boleh kosong");
            InputKontak.requestFocus();
        } else if (InputTelp.getText().equals("")){
            JOptionPane.showMessageDialog(null,"Telepon tidak boleh kosong");
            InputTelp.requestFocus();
        } else if (InputFax.getText().equals("")){
            JOptionPane.showMessageDialog(null,"Fax tidak boleh kosong");
            InputFax.requestFocus();
        } else if (InputAlamat.getText().equals("")){
            JOptionPane.showMessageDialog(null,"Alamat tidak boleh kosong");
            InputAlamat.requestFocus();
        } else
        try {
            Connection koneksi;
            koneksi = DriverManager.getConnection(mysqlUrl);

            String kodeBarang  = InputKodeSuplier.getText();
            String cekQuery = "SELECT COUNT(*) FROM tabelsuplier WHERE KodeSuplier = ?";
            PreparedStatement cekStmt = koneksi.prepareStatement(cekQuery);
            cekStmt.setString(1, InputKodeSuplier.getText());
            ResultSet rs = cekStmt.executeQuery();

            rs.next();
            int jumlah = rs.getInt(1);

            if (jumlah > 0) {
                JOptionPane.showMessageDialog(rootPane,
                    "Kode Barang '" + kodeBarang + "' Sudah ada!\nSilakan gunakan kode lain.",
                    "Duplikasi Data",
                    JOptionPane.WARNING_MESSAGE);
                System.out.println("Kode Barang '" + kodeBarang + "' Sudah ada atau duplikasi ata");
                return;
            }

            koneksi.createStatement().executeUpdate("INSERT INTO tabelsuplier VALUES('"+InputKodeSuplier.getText()+"','"+InputNamaSuplier.getText()+"','"+InputKontak.getText()+"','"+InputTelp.getText()+"','"+InputFax.getText()+"', '"+InputAlamat.getText()+"')");
            JOptionPane.showMessageDialog(rootPane, "Data berhasil disimpan");
            InputKodeSuplier.setText(null);
            InputNamaSuplier.setText(null);
            InputKontak.setText(null);
            InputTelp.setText(null);
            InputFax.setText(null);
            InputAlamat.setText(null);
            //                InputKodeBarang.requestFocus();
            tampil(); //memanggil prosedur dengan nama tampil, prosedur harus dibuat terlebih dahulu
        } catch (SQLException error) {
            JOptionPane.showMessageDialog(rootPane, "Database Error: " + error.getMessage());
            System.out.println("Database Error: " + error.getMessage());
        }
    }//GEN-LAST:event_ButtonSimpanActionPerformed

    private void ButtonEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonEditActionPerformed
        // TODO add your handling code here:
        if (InputKodeSuplier.getText().equals("")){
            JOptionPane.showMessageDialog(null,"Kode Suplier tidak boleh kosong");
            InputKodeSuplier.requestFocus();
        } else if (InputNamaSuplier.getText().equals("")){
            JOptionPane.showMessageDialog(null,"Nama Suplier tidak boleh kosong");
            InputNamaSuplier.requestFocus();
        } else if (InputKontak.getText().equals("")){
            JOptionPane.showMessageDialog(null,"Kontak tidak boleh kosong");
            InputKontak.requestFocus();
        } else if (InputTelp.getText().equals("")){
            JOptionPane.showMessageDialog(null,"Telepon tidak boleh kosong");
            InputTelp.requestFocus();
        } else if (InputFax.getText().equals("")){
            JOptionPane.showMessageDialog(null,"Fax tidak boleh kosong");
            InputFax.requestFocus();
        } else if (InputAlamat.getText().equals("")){
            JOptionPane.showMessageDialog(null,"Alamat tidak boleh kosong");
            InputAlamat.requestFocus();
        } else
        try {
            Connection koneksi;
            koneksi = DriverManager.getConnection(mysqlUrl);
            String kodeBarang  = InputKodeSuplier.getText();

            int result = koneksi.createStatement().executeUpdate("UPDATE tabelsuplier SET KodeSuplier = '"+ kodeBarang +"', NamaSuplier = '"+InputNamaSuplier.getText()+"', Kontak = '"+InputKontak.getText()+"',  Telpon = ' "+InputTelp.getText()+"',  Fax = '"+InputFax.getText()+"', Alamat = '"+InputAlamat.getText()+"' WHERE KodeSuplier = '"+kodeLama+"'");
            JOptionPane.showMessageDialog(rootPane, "Data berhasil disimpan");
            InputKodeSuplier.setText(null);
            InputNamaSuplier.setText(null);
            InputKontak.setText(null);
            InputTelp.setText(null);
            InputFax.setText(null);
            InputAlamat.setText(null);
            //                InputKodeBarang.requestFocus();
            tampil(); //memanggil prosedur dengan nama tampil, prosedur harus dibuat terlebih dahulu
        } catch (SQLException error) {
            JOptionPane.showMessageDialog(rootPane, "Database Error: " + error.getMessage());
            System.out.println("Database Error: " + error.getMessage());
        }
    }//GEN-LAST:event_ButtonEditActionPerformed

    private void ButtonBatalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonBatalActionPerformed
        // TODO add your handling code here:
        InputKodeSuplier.setText(null);
        InputNamaSuplier.setText(null);
        InputKontak.setText(null);
        InputTelp.setText(null);
        InputFax.setText(null);
        InputAlamat.setText(null);    
        InputKodeSuplier.requestFocus();
    }//GEN-LAST:event_ButtonBatalActionPerformed

    private void ButtonHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonHapusActionPerformed
        // TODO add your handling code here:
        try {
            Connection koneksi;
            koneksi = DriverManager.getConnection(mysqlUrl);
            String kodeBarang  = InputKodeSuplier.getText();
            int result = koneksi.createStatement().executeUpdate("DELETE FROM tabelsuplier WHERE KodeSuplier = '"+ kodeBarang +"'");
            JOptionPane.showMessageDialog(rootPane, "Data berhasil dihapus dengan id: " + kodeBarang);
            InputKodeSuplier.setText(null);
            InputNamaSuplier.setText(null);
            InputKontak.setText(null);
            InputTelp.setText(null);
            InputFax.setText(null);
            InputAlamat.setText(null);
            tampil();
        } catch(SQLException error) {
            JOptionPane.showMessageDialog(rootPane, "Database Error: " + error.getMessage());
            System.out.println("Database Error: " + error.getMessage());
        }
    }//GEN-LAST:event_ButtonHapusActionPerformed

    private void ButtonTutupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonTutupActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_ButtonTutupActionPerformed

    private void ButtonCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonCariActionPerformed
        // TODO add your handling code here:
        String searchInput = InputCari.getText().trim();

        if (searchInput.equals("")) {
            JOptionPane.showMessageDialog(null, "Masukkan keyword terlebih dahulu!");
            InputCari.requestFocus();
            return;
        }

        try {
            int row = TabelSuplier.getRowCount();
            for (int i = 0; i < row; i++) {
                table.removeRow(0);
            }

            // Koneksi ke database
            Connection koneksi = DriverManager.getConnection(
                mysqlUrl
            );

            // Query pencarian
            String query = "SELECT * FROM tabelsuplier WHERE KodeSuplier LIKE ? OR NamaSuplier LIKE ?";
            PreparedStatement pst = koneksi.prepareStatement(query);
            pst.setString(1, "%" + searchInput + "%");
            pst.setString(2, "%" + searchInput + "%");

            ResultSet rs = pst.executeQuery();

            // Cek apakah data ditemukan
            boolean found = false;
            while (rs.next()) {
                found = true;
                String[] data = {
                    rs.getString("KodeSuplier"),
                    rs.getString("NamaSuplier"),
                    rs.getString("Kontak"),
                    rs.getString("Telpon"),
                    rs.getString("Fax"),
                    rs.getString("Alamat"),
                };
                table.addRow(data);
                System.out.println("hasil cari: " + Arrays.toString(data));
            }

            if (!found) {
                JOptionPane.showMessageDialog(rootPane,
                    "Kode Suplier atau Nama Suplier '" + searchInput + "' tidak ditemukan!\nSilahkan refresh untuk melihat tabel!");
                System.out.println("Kode Suplier atau Nama Suplier '" + searchInput + "' tidak ditemukan!\nSilahkan refresh untuk melihat tabel!");
            }
        } catch (SQLException error) {
            JOptionPane.showMessageDialog(rootPane, "Database Error: " + error.getMessage());
            System.out.println("Database Error: " + error.getMessage());
        }
    }//GEN-LAST:event_ButtonCariActionPerformed

    private void InputCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InputCariActionPerformed
        // TODO add your handling code here:
        ButtonCari.doClick();
    }//GEN-LAST:event_InputCariActionPerformed

    private void ButtonCetakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonCetakActionPerformed
        // TODO add your handling code here:
        try {
            File report = new File("./src/components/suplier/reportSuplier.jrxml");
            JasperDesign JasDesign = JRXmlLoader.load(report);
            parameter.clear();
            JasReport = JasperCompileManager.compileReport(JasDesign);
            JasPrint = JasperFillManager.fillReport(JasReport, parameter, con);
            // Buat instance JasperViewer
            JRViewer viewer = new JRViewer(JasPrint);

            // Buat JFrame baru sebagai container
            JFrame previewFrame = new JFrame("Preview Laporan");
            previewFrame.getContentPane().add(viewer);
            previewFrame.setExtendedState(JFrame.MAXIMIZED_BOTH); // full screen
            previewFrame.setAlwaysOnTop(true); // pastikan di atas
            previewFrame.setLocationRelativeTo(null); // tengah layar
            previewFrame.setVisible(true);
            previewFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);

        }catch(Exception error) {
            JOptionPane.showMessageDialog(null,"Gagal print: " + error.getMessage());
            System.out.println("Gagal print: " + error.getMessage());
        }
    }//GEN-LAST:event_ButtonCetakActionPerformed

    private void ButtonRefreshTabel1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonRefreshTabel1ActionPerformed
        // TODO add your handling code here:

        try {
            // Koneksi ke database
            Connection koneksi = DriverManager.getConnection(mysqlUrl);

            // Ambil model tabel yang sudah ada
            DefaultTableModel table = (DefaultTableModel) TabelSuplier.getModel();

            // Hapus semua baris lama
            int row = table.getRowCount();
            for (int i = 0; i < row; i++) {
                table.removeRow(0);
            }

            // Ambil semua data dari tabelsuplire
            String sql = "SELECT * FROM tabelsuplier";
            Statement stmt = koneksi.createStatement();
            ResultSet rs = stmt.executeQuery(sql);
            
            // Tambahkan ke JTable
            while (rs.next()) {
                String[] data = {
                    rs.getString("KodeSuplier"),
                    rs.getString("NamaSuplier"),
                    rs.getString("Kontak"),
                    rs.getString("Telpon"),
                    rs.getString("Fax"),
                    rs.getString("Alamat"),
                };
                table.addRow(data);
            }
            
            // Tutup koneksi
            koneksi.close();
            
            // Opsional: tampilkan pesan sukses
            JOptionPane.showMessageDialog(rootPane, "Tabel berhasil diperbarui!");

        } catch (SQLException error) {
            JOptionPane.showMessageDialog(rootPane, "Gagal memuat data: " + error.getMessage());
            System.out.println("Gagal memuat data: " + error.getMessage());
        }
    }//GEN-LAST:event_ButtonRefreshTabel1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                FormSuplier dialog = new FormSuplier(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonBatal;
    private javax.swing.JButton ButtonCari;
    private javax.swing.JButton ButtonCetak;
    private javax.swing.JButton ButtonEdit;
    private javax.swing.JButton ButtonHapus;
    private javax.swing.JButton ButtonRefreshTabel1;
    private javax.swing.JButton ButtonSimpan;
    private javax.swing.JButton ButtonTutup;
    private javax.swing.JTextArea InputAlamat;
    private javax.swing.JTextField InputCari;
    private javax.swing.JTextField InputFax;
    private javax.swing.JTextField InputKodeSuplier;
    private javax.swing.JTextField InputKontak;
    private javax.swing.JTextField InputNamaSuplier;
    private javax.swing.JTextField InputTelp;
    private javax.swing.JTable TabelSuplier;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
     private void tampil() {
        try {
            table.setRowCount(0); // hapus semua row
            Connection koneksi = DriverManager.getConnection(mysqlUrl);
            ResultSet dat = koneksi.createStatement().executeQuery("select * from tabelsuplier");
            while(dat.next()){
                String[] data = {dat.getString(1),dat.getString(2),dat.getString(3),dat.getString(4),dat.getString(5), dat.getString(6)};
                table.addRow(data);
            }
            koneksi.close();
        } catch (SQLException error) {
            JOptionPane.showMessageDialog(rootPane,"Database Error: " + error.getMessage());
            System.out.println("Database Error: " + error.getMessage());
        }
    }
}
